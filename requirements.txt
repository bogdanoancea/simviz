General comments:
  
  Many of the functions specified below can be grouped as the same function with an extra parameter indicating the variable to be drawn (e.g. emission probabilities and postLoc probabilities; number of devices, number of individuals in the network, number of individuals in the target population). We keep them separate just for ease of specification.

  The general philosophy is to follow the grammar of graphics having as a core layer the map and adding different (conceptual) layers as desired (grid, regions, probabilities, persons, etc.).

Static visualizations:

- MNOmap 
	
	This is a basic function to draw the territory map and be prepared for additional (conceptual) layers (specified below):

	parameters: 
		* wkt file: wkt file with the map of the geographical territory for the simulation or any other geospatial object with this information
		* graphical parameters: to customise the map
	return:
	    * the map 
		
- Layers:

    + MNOmap_grid: 
		parameters: 
			* grid: raster object or similar for the grid; we need to choose the appropriate class for the raster, especially to make geocomputations with other geospatial objects (e.g. regions).
			* graphical parameters: to customise the grid
		return:
			* the grid on top of the map
			
	+ MNOmap_regions:
		parameters:
			* regions: a geospatial object for the regions; we need to choose the appropriate class for the regions, especially to make geocomputations with other geospatial objects (e.g. grid).
			* graphical parameters: to customise the regions
		return:
			* the regions on top of the map

	+ MNOmap_networkCells:
		parameters:
			* cells: original xml file or geospatial object with this information specifying the configuration of the network.
			* graphical parameters: to customise the network cell representation 
		return:
			* coverage cells, BTS position, TA annuli, etc. depending on input parameters on top of the map
		
	+ MNOmap_signal:
		parameters:
			* signal: geospatial object with the specification of the signal type and values (RSS, SDM, ...) in each grid tile.
			* graphical parameters: to customise the signal representation
		return: signal representation on top of the grid and the map 
		comment: we should consider the possibility of making a function to draw the signal in continuous form (independently of the grid; not rasterized)
		
	+ MNOmap_eventLocProb:
		parameters:
			* prob: geospatial object with the specification of the event location probability for a specified network cell in each grid tile.
			* graphical parameters: to customise the event location probability representation
		return: event location probability representation on top of the grid and the map
	
	+ MNOmap_postLocProb:
		parameters:
			* prob: geospatial object with the specification of the posterior location probability for a specified device in each grid tile.
			* graphical parameters: to customise the posterior location probability representation
		return: posterior location probability representation on top of the grid and the map
		comment: We should consider the possibility to represent the postLocProb for multiple devices using facets (thus reduced to a few devices) 
		
	+ MNOmap_devices:
		parameter:
			* Ndev: geospatial object with the number of devices (estimated/true) in each aggregation of grid tiles.
			* graphical parameters: to customise the number of devices representation (it should be possible to draw 2d densities on the map)
		return: number of devices in each grid tile aggregation on top of the grid and the map	
	
	+ MNOmap_netIndividuals:
		parameter:
			* Nnet: geospatial object with the number of individuals (not devices) (estimated/true) detected by the network in each aggregation of grid tiles.
			* graphical parameters: to customise the number of detected individuals representation (it should be possible to draw 2d densities on the map)
		return: estimated number of individuals in each grid tile aggregation on top of the grid and the map	
	
	+ MNOmap_popIndividuals:
		parameter:
			* Npop: geospatial object with the number of individuals (not devices) (estimated/true) in the target population in each aggregation of grid tiles.
			* graphical parameters: to customise the number of individuals representation (it should be possible to draw 2d densities on the map)
		return: estimated number of individuals in each grid tile aggregation on top of the grid and the map
	
	+ MNOmap_persons:
		parameters: 
			* persons: geospatial object with the specification of the position of each person (included in the input data set). Input data must specify the number of devices of each person.
			* graphical parameters: to customise the representation of persons locations on top of the map. A parameter should collect whether each person has 0, 1, 2,... devices (color, shape, ...) (it should be possible to draw 2d densities on the map)
		return: position of each person included in the input data set.
	
	+MNOmap_density3D:
		To be specified 
	
	
	- For trajectories:
		- To draw static trajectories for a limited number of persons we need to analyse more deeply if the same input data sets can be used (because we need data from several time instants). We shall revise this type of graphs for a second round of specifications.


Dynamic visualizations:
	
	This is left for a second round of specifications. Basically, we should reuse the same functions as before together with a time parameter and the gganimate package.
	
